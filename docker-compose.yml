version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: payment_gateway_db
    environment:
      POSTGRES_DB: payment_gateway
      POSTGRES_USER: payment_user
      POSTGRES_PASSWORD: payment_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - payment_network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: payment_gateway_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - payment_network
    restart: unless-stopped

  # Payment Gateway Backend
  backend:
    build:
      context: ./server
      dockerfile: ../Dockerfile
    container_name: payment_gateway_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://payment_user:payment_password@postgres:5432/payment_gateway
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_REFRESH_SECRET: your-refresh-secret-key-change-this-in-production
      PORT: 5000
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ./server/uploads:/app/uploads
    ports:
      - "5000:5000"
    networks:
      - payment_network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Payment Gateway Frontend
  frontend:
    build:
      context: ./client
      dockerfile: ../Dockerfile.client
    container_name: payment_gateway_frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000/api/v1
      REACT_APP_WS_URL: ws://localhost:5000
    ports:
      - "3000:3000"
    networks:
      - payment_network
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: payment_gateway_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - payment_network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  # PM2 Process Manager (Alternative to direct node start)
  pm2:
    build:
      context: ./server
      dockerfile: ../Dockerfile.pm2
    container_name: payment_gateway_pm2
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://payment_user:payment_password@postgres:5432/payment_gateway
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_REFRESH_SECRET: your-refresh-secret-key-change-this-in-production
      PORT: 5000
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ./server/uploads:/app/uploads
    ports:
      - "5001:5000"
    networks:
      - payment_network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    profiles:
      - pm2

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  payment_network:
    driver: bridge 